<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- parent 태그를 이용하여 또 다른 POM 설정을 상속할 수 있다. 따라서 눈에 보이지는 않지만 부모 설정파일로부터 수많은 
		dependency 설정을 상속받아 가지게 되는 것 -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.3</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>myboot01</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>myboot01</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>

		<!-- 웹 애플리케이션에 필요한 스프링 MVC 관련 라이브러리 스프링 부트가 웹 프로젝트 환경에 최적화된 라이브러리들을 등록해준다. 
			이 때 톰캣 라이브러리도 같이 다운로드되었으며, 애플리케이션 실행시 이 내장 톰캣이 구동된 것 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- JUnit을 비롯한 테스트 관련 라이브러리 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!--jsp를 사용하려면 반드시 타임리프라이브러리 비활성화 해야 됨 -->
		 <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-thymeleaf</artifactId> 
			</dependency> 

		<!-- 스프링부트에서는 jsp가 기본 웹페이지가 아니므로 jstl과 jasper 반드시 추가해줘야 함 -->

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
		</dependency>



		<!-- 컨트롤러를 수정할 때마다 매번 애플리케이션을 재실행하는 것이 귀찮으면 스프링 부트가 제공하는 DevTools기능을 이용하면 
			됨 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>


		<!-- Lombok(롬복)은 Java 라이브러리로 반복되는 getter, setter, toString 등의 메서드 작성 코드를 
			줄여주는 코드 다이어트 라이브러리입니다. 롬복 라이브러리만 다운로드했다고 바로 사용할 수는 없다. 롬복을 사용하려면 별도로 이클립스 
			설치 폴더에 롬복 라이브러리를 추가해야 한다. 이클립스 종료 후 롬복홈페이지(projectlombok.org)에 접속해서 다운로드 
			후 java -jar lombok.jar 이클립스 위치 설정 후 이클립스(STS) 재시작 -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
